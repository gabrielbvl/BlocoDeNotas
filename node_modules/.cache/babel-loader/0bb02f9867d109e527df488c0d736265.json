{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Kenzie/M3/Atividades/Sprint 3/react-atividade-s3-redux-thunk-na-pratica-gabrielbvlk/src/Pages/Home/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCommentThunk, removeCommentThunk } from \"../../store/modules/user/thunks\";\nimport { useState } from \"react\";\nimport \"./styles.css\";\nimport { toast } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [currentComment, setCurrentCommente] = useState(\"\"); // const [num, setNum] = useState(1);\n\n  const user = useSelector(state => state.user);\n\n  const addComment = () => {\n    // setNum(user.comments.length + 2);\n    dispatch(addCommentThunk(currentComment));\n    setCurrentCommente(\"\");\n    toast.success(\"Comentário adicionado com sucesso\");\n  };\n\n  const removeComment = comment => {\n    console.log(comment);\n    dispatch(removeCommentThunk(comment));\n    toast.error(\"Comentário excluido\"); // setNum(user.comments.length - 1);\n  };\n\n  let number = 1;\n\n  const attNum = () => {\n    let coment = user.comments;\n\n    for (let i = 1; i < coment.length; i++) {\n      let coments = coment[i].split(\":\");\n\n      if (coments[0] === number) {\n        number += 1;\n      } else {\n        return number;\n      }\n\n      return number;\n    }\n  };\n\n  console.log(attNum());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Anota\\xE7\\xF5es do \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setCurrentCommente(e.target.value),\n        value: currentComment,\n        type: \"text\",\n        placeholder: \"Digite seu coment\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addComment,\n        children: \"New Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), user.comments.map((comment, comments) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list_comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [comments, \": \", comment]\n      }, comments.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeComment(comment),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"MGaczDJISPhAQ5tAHdrU/RdogHA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/gabriel/Kenzie/M3/Atividades/Sprint 3/react-atividade-s3-redux-thunk-na-pratica-gabrielbvlk/src/Pages/Home/index.jsx"],"names":["useDispatch","useSelector","addCommentThunk","removeCommentThunk","useState","toast","Home","dispatch","currentComment","setCurrentCommente","user","state","addComment","success","removeComment","comment","console","log","error","number","attNum","coment","comments","i","length","coments","split","name","e","target","value","map","index"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { addCommentThunk, removeCommentThunk } from \"../../store/modules/user/thunks\";\nimport { useState } from \"react\";\nimport \"./styles.css\";\nimport { toast } from \"react-hot-toast\";\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const [currentComment, setCurrentCommente] = useState(\"\");\n    // const [num, setNum] = useState(1);\n    const user = useSelector((state) => state.user);\n\n    const addComment = () => {\n        // setNum(user.comments.length + 2);\n        dispatch(addCommentThunk(currentComment));\n        setCurrentCommente(\"\");\n        toast.success(\"Comentário adicionado com sucesso\");\n    };\n\n    const removeComment = (comment) => {\n        console.log(comment);\n        dispatch(removeCommentThunk(comment));\n        toast.error(\"Comentário excluido\");\n        // setNum(user.comments.length - 1);\n    };\n\n    let number = 1;\n\n    const attNum = () => {\n        let coment = user.comments;\n\n        for (let i = 1; i < coment.length; i++) {\n            let coments = coment[i].split(\":\");\n            if (coments[0] === number) {\n                number += 1;\n            } else {\n                return number;\n            }\n            return number;\n        }\n    };\n\n    console.log(attNum());\n\n    return (\n        <div className=\"container\">\n            <h1>Anotações do {user.name}</h1>\n            <div className=\"container_form\">\n                <input\n                    onChange={(e) => setCurrentCommente(e.target.value)}\n                    value={currentComment}\n                    type={\"text\"}\n                    placeholder=\"Digite seu comentário\"\n                ></input>\n                <button onClick={addComment}>New Comment</button>\n            </div>\n            {user.comments.map((comment, comments) => (\n                <div className=\"list_comments\">\n                    <p key={comments.index}>\n                        {comments}: {comment}\n                    </p>\n                    <button onClick={() => removeComment(comment)}>X</button>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}